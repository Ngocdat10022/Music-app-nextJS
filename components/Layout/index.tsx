import Head from "next/head";
import React, { useContext, useEffect } from "react";
import { MusicContext } from "../../context/MusicContext";
import { getInfoSong, getTheSong } from "../../service/api";
import { getCookiesSongId } from "../../utils/musicCookie";
import Header from "../Header";
import PlayMusic from "../PlayMusic";
import SiderBar from "../SiderBar";
import Toast from "../Toast";
interface Props {
  children?: React.ReactNode;
}
const Layout = ({ children }: Props) => {
  const { linkPlay, setLinkPlay, setAutoPlay, setInfoSong, setLoadingSong } =
    useContext(MusicContext);
  useEffect(() => {
    if (linkPlay) {
      setLinkPlay(linkPlay);
      setAutoPlay(true);
    } else {
      const songId = getCookiesSongId();
      if (songId) {
        const refreshLinkPlay = async () => {
          setLoadingSong(true);
          try {
            const [dataSong, dataInfoSong] = await Promise.all([
              getTheSong(songId),
              getInfoSong(songId),
            ]);
            if (dataSong.status === 200) {
              // console.log("dataSong", dataSong);
              // console.log("dataInfoSong", dataInfoSong);
              if (dataSong.data.data && dataInfoSong.data) {
                // console.log("dataSong", dataSong.data.data["128"]);
                setLinkPlay(dataSong.data.data["128"]);
                setAutoPlay(false);
                const title =
                  dataInfoSong.data?.title || dataInfoSong.data.album?.title;
                const nameArtists = dataInfoSong.data?.artistsNames;
                const urlImage = dataInfoSong.data?.thumbnailM;
                setInfoSong([
                  {
                    title,
                    nameArtists,
                    urlImage,
                  },
                ]);
                setLoadingSong(false);
              }
            }
          } catch (error) {
            console.log("error", error);
            setLoadingSong(false);
          }
          // const dataSong = await getTheSong(songId);
        };
        refreshLinkPlay();
      }
    }
  });
  return (
    <>
      <Head>
        <title>Music App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/music.ico" />
      </Head>
      <SiderBar></SiderBar>
      <Header></Header>
      <div className=" h-[100% - 89px] ml-[240px] mt-[70px] mb-[89px] max-lg:h-[100% - 155px] max-lg:mb-[155px] px-[60px] max-w-[100%] max-lg:ml-[70px] max-sm:px-[20px] scroll-bar">
        {children}
      </div>
      <PlayMusic></PlayMusic>
      <Toast />
    </>
  );
};

export default Layout;
